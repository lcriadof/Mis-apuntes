# tipos de datos


----------------
-- tuplas
----------------
Una tupla es una secuencia de valores de cualquier tipo indexada por enteros. Las tuplas son inmutables —tienen una longitud fija y no pueden cambiarse sus elementos— y son comparables. Sintácticamente, una tupla es una lista de valores separados por comas y encerradas entre paréntesis.
Por ejemplo, t=("a","b","c","d","e","f")

Para crear una tupla con un único elemento, es necesario incluir una coma al final.
p = (4,)

No se pueden modificar los elementos de una tupla, pero se puede reemplazar una tupla por otra.

La función len() calcula la longitud de una tupla.


t=(1, "Enero", 2019)
t[0]    # Devuelve 1
t[1]    # Devuelve Enero
t[2]    # Devuelve 2019


ejemplo:
t = tuple()
print (t)
t = tuple("supercalifragilisticoespialidoso")
print (t)

t = (3, 5, "c", "d", "e")
print ( t[0] )     #3
print ( t[1:3] )   # (5, 'c')
print ( t[3] )     # d
print ( t[2:5] )   # ('c', 'd', 'e')

(0,1,2) < (0,1,2)       # False
(0,1,2) == (0,1,2)      # True


--------------
-- Listas
--------------

El método más simple para crear una lista es encerrar los elementos entre corchetes. Por ejemplo, t = [10, 20, 30, 40]

t = [10, 20, 30, 40]
t[2]          # Devuelve 30

A diferencia de las tuplas las listas son mutables

numeros = [17, 123]
print (numeros)  # [17, 123]
numeros[1] = 5
print (numeros)  # [17, 5]

Los elementos en una lista no tienen por qué ser todos del mismo tipo. Por ejemplo:
t = ["casa", 3.0, 5, [11, 20]]

Cuando una lista está dentro de otra, se dice que está anidada. En una lista anidada, cada lista interna solo cuenta como un único elemento. Por ejemplo:
t = [1, 2, 3, [4, 5, 6]]
print(t[3])   # [4, 5, 6]

Soporta indexación con números negativos que permite seleccionar por el final de la lista. Por ejemplo:
t[-1]   # Devuelve [4, 5, 6]

El operador + concatena listas.
a = [1, 2, 3]
b = [4, 5, 6]
c = a + b
print (c)    # Devuelve [1, 2, 3, 4, 5, 6]

El operador in permite preguntar la pertenencia de un elemento a una lista.
a = [1, 2, 3]
2 in a        # True
5 in a        # False

Recorrer elementos de una lista
a = [1, 2, 3]
for x in a:
   print (x)

Eliminación de elementos
del a[1]
print(a)   # [1, 3]

Suma (sum) sobre los elementos de una lista
t = [1, 2, 3, 4, 5, 6]
print(sum(t))        # Devuelve 21

Elementos máximos y mínimos
print ( max(t), min (t) )   # Devuelve 6 y 1

Longitud de la lista
len(t)

Creación de una secuencia
lista =  range (-3,3)
for i in lista:
    print (i)           # Devuelve -3 -2 -1 0 1 2

Añadir elementos
a.append(117)
print(a)   #  [1, 3, 117]

Ordenación de elementos
t = ["d","e","a","c","x"]
t.sort()  # # Devuelve ['a', 'c', 'd', 'e', 'x']

Extracción de elementos
t = ["d","e","a","c","x"]
x = t.pop(1)
print (t)      # Devuelve ['d', 'a', 'c', 'x']
print (x)      # Devuelve e

--------------
-- Cadenas
--------------